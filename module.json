{
	"dependencies" : [],
	"singleton" : false,
	"category" : "automation_basic",
	"author" : "Robert Gebauer",
	"icon" : "icon.png",
	"moduleName" : "LogicalRules2",
	"version" : "1.0.0",
	"maturity" : "stable",
	"repository" : {
		"type" : "git",
		"source" : "https://github.com/RobertGebauer/zway-logical-rules"
	},
	"defaults" : {
		"title" : "__m_title__",
		"description" : "__m_descr__",
		"triggerOnDevicesChange" : true,
		"eventSource" : [],
		"logicalOperator" : " none",
		"tests" : [],
		"action" : {},
		"mail_helper" : "__h_nomail__",
		"mail_button" : "__b_createmail__",
		"mail_confirm" : "__m_createmail__"
	},
	"schema" : {
		"type" : "object",
		"properties" : {
			"logicalOperator" : {
				"type" : "string",
				"enum" : [" none", "and", "or"],
				"default" : " none",
				"required" : true
			},
			"tests" : {
				"type" : "array",
				"items" : {
					"type" : "object",
					"properties" : {
						"testType" : {
							"type" : "string",
							"enum" : [
								"binary",
								"multilevel",
								"remote",
								"sensorDiscrete",
								"time",
								"nested"
							],
							"required" : true,
							"default" : "binary"
						},
						"testBinary" : {
							"type" : "object",
							"dependencies" : "testType",
							"properties" : {
								"device" : {
									"field" : "enum",
									"datasource" : "namespaces",
									"enum" : "namespaces:devices_sensorBinary:deviceId,namespaces:devices_switchBinary:deviceId",
									"required" : true
								},
								"testValue" : {
									"type" : "string",
									"enum" : ["off", "on"],
									"required" : true,
									"default" : "on"
								},
								"triggerRuleCheckOnChange" : {
									"type": "boolean",
									"required" : true,
									"default": true
								}
							}
						},
						"testMultilevel" : {
							"type" : "object",
							"dependencies" : "testType",
							"properties" : {
								"device" : {
									"field" : "enum",
									"datasource" : "namespaces",
									"enum" : "namespaces:devices_sensorMultilevel:deviceId,namespaces:devices_switchMultilevel:deviceId,namespaces:devices_battery:deviceId",
									"required" : true
								},
								"testOperator" : {
									"type" : "string",
									"enum" : ["=", "!=", ">", ">=", "<", "<="],
									"required" : true
								},
								"testValue" : {
									"type" : "number",
									"required" : true
								},
								"triggerRuleCheckOnChange" : {
									"type": "boolean",
									"required" : true,
									"default": true
								}
							}
						},
						"testRemote" : {
							"type" : "object",
							"dependencies" : "testType",
							"properties" : {
								"device" : {
									"field" : "enum",
									"datasource" : "namespaces",
									"enum" : "namespaces:devices_switchControl:deviceId,namespaces:devices_toggleButton:deviceId",
									"required" : true
								},
								"testValue" : {
									"type" : "string",
									"enum" : ["off", "on", "upstart", "upstop", "downstart", "downstop"],
									"required" : true,
									"default" : "on"
								},
								"triggerRuleCheckOnChange" : {
									"type": "boolean",
									"required" : true,
									"default": true
								}
							}
						},
						"testSensorDiscrete": {
							"type": "object",
							"dependencies" : "testType",
							"properties": {
								"device": {
									"field": "enum",
									"datasource": "namespaces",
									"enum": "namespaces:devices_sensorDiscrete:deviceId",
									"required": true
								},
								"testValue": {
									"type": "string",
									"required": true
								},
								"triggerRuleCheckOnChange" : {
									"type": "boolean",
									"required" : true,
									"default": true
								}
							}
						},
						"testTime" : {
							"type" : "object",
							"dependencies" : "testType",
							"properties" : {
								"testOperator" : {
									"type" : "string",
									"enum" : [">=", "<="],
									"required" : true
								},
								"testValue" : {
									"format" : "time",
									"type" : "string",
									"required" : true
								}
							}
						},
						"testNested" : {
							"type" : "object",
							"dependencies" : "testType",
							"properties" : {
								"logicalOperator" : {
									"type" : "string",
									"enum" : ["and", "or"],
									"default" : "or",
									"required" : true
								},
								"tests" : {
									"type" : "array",
									"items" : {
										"type" : "object",
										"properties" : {
											"testType" : {
												"type" : "string",
												"enum" : [
													"binary",
													"multilevel",
													"remote",
													"sensorDiscrete",
													"time"
												],
												"required" : true,
												"default" : "binary"
											},
											"testBinary" : {
												"type" : "object",
												"dependencies" : "testType",
												"properties" : {
													"device" : {
														"field" : "enum",
														"datasource" : "namespaces",
														"enum" : "namespaces:devices_sensorBinary:deviceId,namespaces:devices_switchBinary:deviceId",
														"required" : true
													},
													"testValue" : {
														"type" : "string",
														"enum" : ["off", "on"],
														"required" : true
													},
													"triggerRuleCheckOnChange" : {
														"type": "boolean",
														"required" : true,
														"default": true
													}
												}
											},
											"testMultilevel" : {
												"type" : "object",
												"dependencies" : "testType",
												"properties" : {
													"device" : {
														"field" : "enum",
														"datasource" : "namespaces",
														"enum" : "namespaces:devices_sensorMultilevel:deviceId,namespaces:devices_switchMultilevel:deviceId,namespaces:devices_battery:deviceId",
														"required" : true
													},
													"testOperator" : {
														"type" : "string",
														"enum" : ["=", "!=", ">", ">=", "<", "<="],
														"required" : true
													},
													"testValue" : {
														"type" : "number",
														"required" : true
													},
													"triggerRuleCheckOnChange" : {
														"type": "boolean",
														"required" : true,
														"default": true
													}
												}
											},
											"testRemote" : {
												"type" : "object",
												"dependencies" : "testType",
												"properties" : {
													"device" : {
														"field" : "enum",
														"datasource" : "namespaces",
														"enum" : "namespaces:devices_switchControl:deviceId, namespaces:devices_toggleButton:deviceId",
														"required" : true
													},
													"testValue" : {
														"type" : "string",
														"enum" : ["off", "on", "upstart", "upstop", "downstart", "downstop"],
														"required" : true
													},
													"triggerRuleCheckOnChange" : {
														"type": "boolean",
														"required" : true,
														"default": true
													}
												}
											},
											"testSensorDiscrete": {
												"type": "object",
												"dependencies": "testType",
												"properties": {
													"device": {
														"field": "enum",
														"datasource": "namespaces",
														"enum": "namespaces:devices_sensorDiscrete:deviceId",
														"required": true
													},
													"testValue": {
														"type": "string",
														"required": true
													}
												},
												"triggerRuleCheckOnChange" : {
													"type": "boolean",
													"required" : true,
													"default": true
												}
											},
											"testTime" : {
												"type" : "object",
												"dependencies" : "testType",
												"properties" : {
													"testOperator" : {
														"type" : "string",
														"enum" : [">=", "<="],
														"required" : true
													},
													"testValue" : {
														"format" : "time",
														"type" : "string",
														"required" : true
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"action" : {
				"type" : "object",
				"properties" : {
					"switches" : {
						"type" : "array",
						"items" : {
							"type" : "object",
							"properties" : {
								"device" : {
									"field" : "enum",
									"datasource" : "namespaces",
									"enum" : "namespaces:devices_switchBinary:deviceId",
									"required" : true
								},
								"status" : {
									"type" : "string",
									"required" : true,
									"enum" : ["off", "on"],
									"default" : "on"
								},
								"sendAction" : {
									"type" : "boolean",
									"required" : true,
									"default" : false
								}
							}
						}
					},
					"dimmers" : {
						"type" : "array",
						"items" : {
							"type" : "object",
							"properties" : {
								"device" : {
									"field" : "enum",
									"datasource" : "namespaces",
									"enum" : "namespaces:devices_switchMultilevel:deviceId",
									"required" : true
								},
								"status" : {
									"required" : true,
									"minimum" : 0,
									"maximum" : 99
								},
								"sendAction" : {
									"type" : "boolean",
									"required" : true,
									"default" : false
								}
							}
						}
					},
					"thermostats" : {
						"type" : "array",
						"items" : {
							"type" : "object",
							"properties" : {
								"device" : {
									"field" : "enum",
									"datasource" : "namespaces",
									"enum" : "namespaces:devices_thermostat:deviceId",
									"required" : true
								},
								"status" : {
									"required" : true,
									"minimum" : 0,
									"maximum" : 99
								},
								"sendAction" : {
									"type" : "boolean",
									"required" : true,
									"default" : false
								}
							}
						}
					},
					"locks" : {
						"type" : "array",
						"items" : {
							"type" : "object",
							"properties" : {
								"device" : {
									"field" : "enum",
									"datasource" : "namespaces",
									"enum" : "namespaces:devices_doorlock:deviceId",
									"required" : true
								},
								"status" : {
									"type" : "string",
									"required" : true,
									"enum" : ["close", "open"],
									"default" : "open"
								},
								"sendAction" : {
									"type" : "boolean",
									"required" : true,
									"default" : false
								}
							}
						}
					},
					"scenes" : {
						"type" : "array",
						"items" : {
							"field" : "enum",
							"datasource" : "namespaces",
							"enum" : "namespaces:devices_toggleButton:deviceId",
							"required" : true
						}
					}
				},
				"required" : false
			}
		}
	},
	"options" : {
		"renderform" : "true",
		"fields" : {
			"logicalOperator" : {
				"label" : "__l_logicalOperator__",
				"optionLabels" : ["__p_select__", "__and__", "__or__"],
				"helper" : "__h_logicalOperator__",
				"type" : "select"
			},
			"tests" : {
				"label" : "__l_tests__",
				"fields" : {
					"item" : {
						"fields" : {
							"testType" : {
								"type" : "select",
								"label" : "__l_testType__",
								"optionLabels" : [
									"__l_testBinary__", 
									"__l_testMultilevel__", 
									"__l_testRemote__",
									"__l_sensorDiscrete__",
									"__l_testTime__", 
									"__l_testNested__"
								],
								"default" : ""
							},
							"testBinary" : {
								"dependencies" : {
									"testType" : "binary"
								},
								"fields" : {
									"device" : {
										"label" : "",
										"type" : "select",
										"datasource" : "namespaces",
										"field" : "optionLabels",
										"optionLabels" : "namespaces:devices_sensorBinary:deviceName,namespaces:devices_switchBinary:deviceName"
									},
									"testValue" : {
										"optionLabels" : ["__off__", "__on__"]
									},
									"triggerRuleCheckOnChange" : {
										"type": "checkbox",
										"rightLabel": "__l_triggerRuleCheckOnChange__",
										"helper" : "__h_triggerRuleCheckOnChange__"
									}
								}
							},
							"testMultilevel" : {
								"dependencies" : {
									"testType" : "multilevel"
								},
								"fields" : {
									"device" : {
										"label" : "",
										"type" : "select",
										"datasource" : "namespaces",
										"field" : "optionLabels",
										"optionLabels" : "namespaces:devices_sensorMultilevel:deviceName,namespaces:devices_switchMultilevel:deviceName,namespaces:devices_battery:deviceName"
									},
									"testOperator" : {
										"type" : "select",
										"optionLabels" : ["=", "≠", ">", "≥", "<", "≤"]
									},
									"triggerRuleCheckOnChange" : {
										"type": "checkbox",
										"rightLabel": "__l_triggerRuleCheckOnChange__",
										"helper" : "__h_triggerRuleCheckOnChange__"
									}
								}
							},
							"testRemote" : {
								"dependencies" : {
									"testType" : "remote"
								},
								"fields" : {
									"device" : {
										"label" : "",
										"type" : "select",
										"datasource" : "namespaces",
										"field" : "optionLabels",
										"optionLabels" : "namespaces:devices_switchControl:deviceName, namespaces:devices_toggleButton:deviceName"
									},
									"testValue" : {
										"optionLabels" : ["__off__", "__on__", "__upstart__", "__upstop__", "__downstart__", "__downstop__"]
									},
									"triggerRuleCheckOnChange" : {
										"type": "checkbox",
										"rightLabel": "__l_triggerRuleCheckOnChange__",
										"helper" : "__h_triggerRuleCheckOnChange__"
									}
								}
							},
							"testSensorDiscrete": {
								"dependencies": {
									"testType" : "sensorDiscrete"
								},
								"fields": {
									"device": {
										"type": "select",
										"removeDefaultNone": false,
										"noneLabel": "__l_choose_dev__",
										"datasource": "namespaces",
										"field": "optionLabels",
										"optionLabels": "namespaces:devices_sensorDiscrete:deviceName"
									},
									"testValue": {
										"label": "__l_controller_action__",
										"helper": "__h_controller_action__"
									},
									"triggerRuleCheckOnChange" : {
										"type": "checkbox",
										"rightLabel": "__l_triggerRuleCheckOnChange__",
										"helper" : "__h_triggerRuleCheckOnChange__"
									}
								}
							},
							"testTime" : {
								"dependencies" : {
									"testType" : "time"
								},
								"helper" : "__h_testTime__",
								"fields" : {
									"testOperator" : {
										"type" : "select",
										"optionLabels" : ["≥", "≤"]
									},
									"testValue" : {
										"type" : "time",
										"maskString" : "99:99",
										"dateFormat" : "HH:mm"
									}
								}
							},
							"testNested" : {
								"dependencies" : {
									"testType" : "nested"
								},
								"helper" : "__h_testNested__",
								"fields" : {
									"logicalOperator" : {
										"label" : "__l_logicalOperator__",
										"optionLabels" : ["__and__", "__or__"],
										"helper" : "__h_logicalOperator__",
										"type" : "select"
									},
									"tests" : {
										"fields" : {
											"item" : {
												"fields" : {
													"testType" : {
														"label" : "__l_testType__",
														"optionLabels" : [
															"__l_testBinary__",
															"__l_testMultilevel__",
															"__l_testRemote__",
															"__l_sensorDiscrete__",
															"__l_testTime__"
														],
														"type" : "select",
														"default" : ""
													},
													"testBinary" : {
														"dependencies" : {
															"testType" : "binary"
														},
														"fields" : {
															"device" : {
																"label" : "",
																"type" : "select",
																"datasource" : "namespaces",
																"field" : "optionLabels",
																"optionLabels" : "namespaces:devices_sensorBinary:deviceName,namespaces:devices_switchBinary:deviceName"
															},
															"testValue" : {
																"optionLabels" : ["__off__", "__on__"]
															},
															"triggerRuleCheckOnChange" : {
																"type": "checkbox",
																"rightLabel": "__l_triggerRuleCheckOnChange__",
																"helper" : "__h_triggerRuleCheckOnChange__"
															}
														}
													},
													"testMultilevel" : {
														"dependencies" : {
															"testType" : "multilevel"
														},
														"fields" : {
															"device" : {
																"label" : "",
																"type" : "select",
																"datasource" : "namespaces",
																"field" : "optionLabels",
																"optionLabels" : "namespaces:devices_sensorMultilevel:deviceName,namespaces:devices_switchMultilevel:deviceName,namespaces:devices_battery:deviceName"
															},
															"testOperator" : {
																"type" : "select",
																"optionLabels" : ["=", "≠", ">", "≥", "<", "≤"]
															},
															"triggerRuleCheckOnChange" : {
																"type": "checkbox",
																"rightLabel": "__l_triggerRuleCheckOnChange__",
																"helper" : "__h_triggerRuleCheckOnChange__"
															}
														}
													},
													"testRemote" : {
														"dependencies" : {
															"testType" : "remote"
														},
														"fields" : {
															"device" : {
																"label" : "",
																"type" : "select",
																"datasource" : "namespaces",
																"field" : "optionLabels",
																"optionLabels" : "namespaces:devices_switchControl:deviceName, namespaces:devices_toggleButton:deviceName"
															},
															"testValue" : {
																"optionLabels" : ["__off__", "__on__", "__upstart__", "__upstop__", "__downstart__", "__downstop__"]
															},
															"triggerRuleCheckOnChange" : {
																"type": "checkbox",
																"rightLabel": "__l_triggerRuleCheckOnChange__",
																"helper" : "__h_triggerRuleCheckOnChange__"
															}
														}
													},
													"testSensorDiscrete": {
														"dependencies": {
															"testType" : "sensorDiscrete"
														},
														"fields": {
															"device": {
																"type": "select",
																"removeDefaultNone": false,
																"noneLabel": "__l_choose_dev__",
																"datasource": "namespaces",
																"field": "optionLabels",
																"optionLabels": "namespaces:devices_sensorDiscrete:deviceName"
															},
															"testValue": {
																"label": "__l_controller_action__",
																"helper": "__h_controller_action__"
															},
															"triggerRuleCheckOnChange" : {
																"type": "checkbox",
																"rightLabel": "__l_triggerRuleCheckOnChange__",
																"helper" : "__h_triggerRuleCheckOnChange__"
															}
														}
													},
													"testTime" : {
														"dependencies" : {
															"testType" : "time"
														},
														"helper" : "__h_testTime__",
														"fields" : {
															"testValue" : {
																"type" : "time",
																"maskString" : "99:99",
																"dateFormat" : "HH:mm"
															},
															"testOperator" : {
																"type" : "select",
																"optionLabels" : ["≥", "≤"]
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"action" : {
				"label" : "__l_action__",
				"fields" : {
					"switches" : {
						"label" : "__l_switches__",
						"fields" : {
							"item" : {
								"fields" : {
									"device" : {
										"label" : "",
										"type" : "select",
										"datasource" : "namespaces",
										"field" : "optionLabels",
										"optionLabels" : "namespaces:devices_switchBinary:deviceName"
									},
									"status" : {
										"label" : "",
										"optionLabels" : ["__off__", "__on__"]
									},
									"sendAction" : {
										"type" : "checkbox",
										"rightLabel" : "__l_sendAction__",
										"helper" : "__h_sendAction__"
									}
								}
							}
						}
					},
					"dimmers" : {
						"label" : "__l_dimmers__",
						"fields" : {
							"item" : {
								"fields" : {
									"device" : {
										"label" : "",
										"type" : "select",
										"datasource" : "namespaces",
										"field" : "optionLabels",
										"optionLabels" : "namespaces:devices_switchMultilevel:deviceName"
									},
									"status" : {
										"label" : "__l_status__",
										"type" : "integer"
									},
									"sendAction" : {
										"type" : "checkbox",
										"rightLabel" : "__l_sendAction__",
										"helper" : "__h_sendAction__"
									}
								}
							}
						}
					},
					"thermostats" : {
						"label" : "__l_thermostats__",
						"fields" : {
							"item" : {
								"fields" : {
									"device" : {
										"label" : "",
										"type" : "select",
										"datasource" : "namespaces",
										"field" : "optionLabels",
										"optionLabels" : "namespaces:devices_thermostat:deviceName"
									},
									"status" : {
										"label" : "__l_status__",
										"type" : "integer"
									},
									"sendAction" : {
										"type" : "checkbox",
										"rightLabel" : "__l_sendAction__",
										"helper" : "__h_sendAction__"
									}
								}
							}
						}
					},
					"locks" : {
						"label" : "__l_locks__",
						"fields" : {
							"item" : {
								"fields" : {
									"device" : {
										"label" : "",
										"type" : "select",
										"datasource" : "namespaces",
										"field" : "optionLabels",
										"optionLabels" : "namespaces:devices_doorlock:deviceName"
									},
									"status" : {
										"label" : "",
										"optionLabels" : ["__close__", "__open__"]
									},
									"sendAction" : {
										"type" : "checkbox",
										"rightLabel" : "__l_sendAction__",
										"helper" : "__h_sendAction__"
									}
								}
							}
						}
					},
					"scenes" : {
						"label" : "__l_scenes__",
						"fields" : {
							"item" : {
								"type" : "select",
								"datasource" : "namespaces",
								"field" : "optionLabels",
								"optionLabels" : "namespaces:devices_toggleButton:deviceName"
							}
						}
					}
				}
			}
		}
	}
}
