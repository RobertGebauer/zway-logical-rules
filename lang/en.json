{
	"m_title":"Logical Rule 2",
	"m_descr":"This app is the by far most complex but also most powerful app preloaded to your gateway. It allows to combine multiple status and events in a logical way using the Boolean operators AND, OR and NOT. You need to have basic knowledge about Boolean logic and/or software development to properly use this widget. Please note that the final target of the Boolean logic is to trigger an action. This mean you need at least one (dynamic) event source that essentially triggers but many more (static) status information that you can make the action depending on. It is not suitable to combine two events because the final action will only happen if both events would occur at the very same moment. This is quite unlikely. The difference between a dynamic event and a static status can be explained using a simple motion sensor. The dynamic event is the moment when the motion sensor trips. The static status is the information if the motion sensor is actually in tripped state (has just detected a motion and wait for a few seconds before turning back into inactivity mode).<br><br>Settings: Select the status information and the events you want to logically combine and select the Boolean operators to combine them.",
	"l_logicalOperator":"Boolean operator",
	"h_logicalOperator":"This option links all conditions in the list to a logical OR or AND. With OR, the action is executed if at least one condition applies. With AND, the action is only executed if all conditions apply.",
	"l_tests":"Conditions",
	"l_testBinary":"Binary condition",
	"l_testMultilevel":"Multilevel condition",
	"l_testRemote":"Remote condition",
	"l_testTime":"Time condition",
	"timeFormat":"hh:mm",
	"l_testNested":"Nested conditions",
	"l_action":"Actions",
	"l_switches":"List of switches:",
	"l_thermostats":"Thermostats",
	"off":"Off",
	"on":"On",
	"upstart":"Up start",
	"upstop":"Up stop",
	"downstart":"Down start",
	"downstop":"Down stop",
	"l_dimmers":"List of dimmers:",
	"l_status":"Level",
	"l_locks":"List of locks:",
	"close":"Close",
	"open":"Open",
	"l_scenes":"List of scenes to activate:",
	"or": "At least one condition is fulfilled (OR)",
	"and": "All conditions must be met (AND)",
	"l_testType": "Type of condition:",
	"h_testNested": "Add a new nested condition - like in logical notation: A AND B AND (C OR D). The additional nested condition is (C OR D). An action is only triggered if the conditions A and B and either the condition C or D are met together. Example: If outside the light sensor A > 80% and the temperature sensor B > 26Â°C and (time < 12:00 am or time > 02:00 pm) then the jalousie in the living room is set to 50%.",
	"l_sendAction":"Don't send On command, if device is already turned On, similarly for Off. Need to avoid flooding the network.",
	"h_sendAction":"Prevents unnecessary network commands.",
	"h_testTime":"This condition checks if the current time is 'less than or equal to' or 'greater than or equal to' the entered time. E.g. current time: 09:00 and condition: >= 10:00 will return 'false' and not pass the rule. 24-h-format - hh:mm",
	"l_triggers": "How the Logical Rule is triggered",
	"l_conditions": "What triggers the Logical Rule",
	"p_select": " Please choose",
	"WrongOperator": "Choose a valid operator",
	"l_notification":"Notification",
	"l_notification_message":"Message",
	"h_notification_message":"Content of the notification.",
	"l_notification_target":"Target",
	"l_notification_device":"Device",
	"l_notification_mail":"Email",
	"l_choose_target":"--- Choose a target ---",
	"h_nomail":"Currently, no email notification is possible because the EMailMe app is not installed/activated.",
	"b_createmail": "Activate EMailMe",
	"m_createmail": "ATTENTION! <br /> When leaving the current configuration, all previous settings are lost. <br /><br /> NOTE: <br /> You can continue with 'Cancel' without configuring the EMailMe app, create it afterwards, and add it then in the Logical Rule configuration.",
    "l_sensorDiscrete":"Scene Controller",
    "l_choose_dev":"--- Choose a device ---",
    "l_controller_action":"Controller Actions",
	"h_controller_action":"The action is described with a two-digit value: The first digit is the button number, the second digit points to the action of this button (0=short press, 1=release, 2=hold, 3=short press two times, 4 = short press three times, and so on. Examples: Double Click button 2 => 23, Single Click button 1 = 10)",
	"l_triggerRuleCheckOnChange": "Check logical rule when metrics of this device changes.",
	"h_triggerRuleCheckOnChange": "If you check this option, the check of the whole logical rule is performed whenever the metrics of this device changes. If this options is unchecked, this devices still belongs to the logical rule, but any change of the metrics of this device does not trigger a rule check. At least one condition must check this option to make the logical rule work."
}